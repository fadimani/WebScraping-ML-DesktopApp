/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import ML_part.ML.ClusteringTask;
import weka.classifiers.Evaluation;
import weka.core.SerializationHelper;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.File;
import java.io.IOException;
import javax.swing.*;
import javax.swing.plaf.basic.BasicButtonUI;

/**
 *
 * @author imani
 */
public class HomeML extends javax.swing.JFrame implements ActionListener {

    /**
     * Creates new form Home
     */
    public HomeML(String user) {
        initComponents(user);
        JButton [] btns = {jButton1,jButton2,jButton3,jButton4,jButton5};
        for(JButton btn:btns){
            btn.setBackground(new Color(21,25,28));
            btn.setUI(new BasicButtonUI());
            btn.addMouseListener(new MouseListener(){
                @Override
                public void mouseClicked(MouseEvent e) {
                }

                @Override
                public void mousePressed(MouseEvent e) {
                }

                @Override
                public void mouseReleased(MouseEvent e) {
                }

                @Override
                public void mouseEntered(MouseEvent e) {
                    btn.setBackground(new Color(44,52,58));
                }

                @Override
                public void mouseExited(MouseEvent e) {
                    btn.setBackground(new Color(21,25,28));

                }
            });
        }





        butttton6.addActionListener(this);
        jButton7.addActionListener(this);
        jButton4.addActionListener(this);
        jButton2.addActionListener(this);

        imgIcon =  new ImageIcon("src/main/java/gui/icons/logo3.png");
        Image Oldimg = imgIcon.getImage();
        Image img = Oldimg.getScaledInstance(50, 50,  java.awt.Image.SCALE_SMOOTH);
        imgIcon = new ImageIcon(img);

        imgIcon1 =  new ImageIcon("src/main/java/gui/icons/logo4.png");
        Image Oldimg1 = imgIcon1.getImage();
        Image img1 = Oldimg1.getScaledInstance(50, 50,  java.awt.Image.SCALE_SMOOTH);
        imgIcon1 = new ImageIcon(img1);


        JCheckBox [] bs = {jCheckBox1,jCheckBox3,jCheckBox4,jCheckBox5,jCheckBox7,jCheckBox6};
        for(JCheckBox b:bs){
            b.setIcon(imgIcon1);
            b.setSelectedIcon(imgIcon);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents(String user) {

        root = new javax.swing.JPanel();
        root_side = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jButton5 = new JButton();
        jButton1 = new JButton();
        jButton2 = new JButton();
        jButton3 = new JButton();
        jButton4 = new JButton();
        root_center = new javax.swing.JPanel();
        pnlTop = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        pnlBottom = new javax.swing.JPanel();
        pnlCenter = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        butttton6 = new JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox7 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jButton7 = new JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        root.setLayout(new java.awt.BorderLayout());

        root_side.setBackground(new Color(21, 25, 28));
        root_side.setPreferredSize(new java.awt.Dimension(100, 300));

        jPanel1.setBackground(new Color(21, 25, 28));
        jPanel1.setPreferredSize(new java.awt.Dimension(80, 170));
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 35));

        jButton5.setBackground(new Color(34, 40, 44));
        jButton5.setIcon(new javax.swing.ImageIcon("src/main/java/gui/icons/icons8_home_20px_1.png")); // NOI18N
        jButton5.setBorder(new javax.swing.border.LineBorder(new Color(204, 204, 204), 1, true));
        jButton5.setBorderPainted(false);
        jButton5.setFocusable(false);
        jButton5.setPreferredSize(new java.awt.Dimension(60, 60));
        jPanel1.add(jButton5);

        root_side.add(jPanel1);

        jButton1.setBackground(new Color(34, 40, 44));
        jButton1.setIcon(new javax.swing.ImageIcon("src/main/java/gui/icons/icons8_circle_20px.png")); // NOI18N
        jButton1.setBorder(new javax.swing.border.LineBorder(new Color(204, 204, 204), 1, true));
        jButton1.setBorderPainted(false);
        jButton1.setFocusable(false);
        jButton1.setPreferredSize(new java.awt.Dimension(60, 60));
        root_side.add(jButton1);

        jButton2.setBackground(new Color(34, 40, 44));
        jButton2.setIcon(new javax.swing.ImageIcon("src/main/java/gui/icons/icons8_combo_chart_20px.png")); // NOI18N
        jButton2.setBorder(new javax.swing.border.LineBorder(new Color(204, 204, 204), 1, true));
        jButton2.setBorderPainted(false);
        jButton2.setFocusable(false);
        jButton2.setPreferredSize(new java.awt.Dimension(60, 60));
        root_side.add(jButton2);

        jButton3.setBackground(new Color(34, 40, 44));
        jButton3.setIcon(new javax.swing.ImageIcon("src/main/java/gui/icons/icons8_expand_20px.png")); // NOI18N
        jButton3.setBorder(new javax.swing.border.LineBorder(new Color(204, 204, 204), 1, true));
        jButton3.setBorderPainted(false);
        jButton3.setFocusable(false);
        jButton3.setPreferredSize(new java.awt.Dimension(60, 60));
        root_side.add(jButton3);

        jButton4.setBackground(new Color(34, 40, 44));
        jButton4.setIcon(new javax.swing.ImageIcon("src/main/java/gui/icons/icons8_logout_20px.png")); // NOI18N
        jButton4.setBorder(new javax.swing.border.LineBorder(new Color(204, 204, 204), 1, true));
        jButton4.setBorderPainted(false);
        jButton4.setFocusable(false);
        jButton4.setPreferredSize(new java.awt.Dimension(60, 60));
        root_side.add(jButton4);

        root.add(root_side, java.awt.BorderLayout.WEST);

        root_center.setBackground(new Color(34, 40, 44));
        root_center.setLayout(new java.awt.BorderLayout());

        pnlTop.setBackground(new Color(34, 40, 44));

        jLabel1.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 24)); // NOI18N
        jLabel1.setForeground(new Color(255, 255, 255));
        jLabel1.setText("Machine learning");

        jLabel3.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 14)); // NOI18N
        jLabel3.setForeground(new Color(255, 255, 255));
        jLabel3.setText("Choose from this list of option a machine learning operation:");

        jLabel2.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 12)); // NOI18N
        jLabel2.setForeground(new Color(255, 255, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon("src/main/java/gui/icons/icons8_contacts_50px.png")); // NOI18N
        jLabel2.setText(user);

        javax.swing.GroupLayout pnlTopLayout = new javax.swing.GroupLayout(pnlTop);
        pnlTop.setLayout(pnlTopLayout);
        pnlTopLayout.setHorizontalGroup(
            pnlTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTopLayout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(pnlTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlTopLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlTopLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 694, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64))))
        );
        pnlTopLayout.setVerticalGroup(
            pnlTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTopLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(pnlTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        root_center.add(pnlTop, java.awt.BorderLayout.NORTH);

        pnlBottom.setBackground(new Color(34, 40, 44));

        javax.swing.GroupLayout pnlBottomLayout = new javax.swing.GroupLayout(pnlBottom);
        pnlBottom.setLayout(pnlBottomLayout);
        pnlBottomLayout.setHorizontalGroup(
            pnlBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1212, Short.MAX_VALUE)
        );
        pnlBottomLayout.setVerticalGroup(
            pnlBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 134, Short.MAX_VALUE)
        );

        root_center.add(pnlBottom, java.awt.BorderLayout.PAGE_END);

        pnlCenter.setBackground(new Color(34, 40, 44));
        pnlCenter.setLayout(new java.awt.CardLayout());

        jPanel2.setBackground(new Color(34, 40, 44));

        jPanel3.setBackground(new Color(44, 52, 58));

        butttton6.setBackground(new Color(51, 102, 255));
        butttton6.setFont(new java.awt.Font("Microsoft JhengHei UI", 1, 24)); // NOI18N
        butttton6.setForeground(new Color(255, 255, 255));
        butttton6.setText("Click To Upload Data File Here");


        jCheckBox1.setFont(new java.awt.Font("Microsoft JhengHei UI", 1, 24)); // NOI18N
        jCheckBox1.setForeground(new Color(255, 255, 255));
        jCheckBox1.setSelected(true);
        jCheckBox1.setText("Classification with naive Bayes' classifier");
        jCheckBox1.setFocusable(false);

        jCheckBox3.setFont(new java.awt.Font("Microsoft JhengHei UI", 1, 24)); // NOI18N
        jCheckBox3.setForeground(new Color(255, 255, 255));
        jCheckBox3.setSelected(true);
        jCheckBox3.setText("Classification with Random Forest Classifier");
        jCheckBox3.setFocusable(false);


        jCheckBox4.setFont(new java.awt.Font("Microsoft JhengHei UI", 1, 24)); // NOI18N
        jCheckBox4.setForeground(new Color(255, 255, 255));
        jCheckBox4.setSelected(true);
        jCheckBox4.setText("Classification with SMO classifier");
        jCheckBox4.setFocusable(false);

        jCheckBox5.setFont(new java.awt.Font("Microsoft JhengHei UI", 1, 24)); // NOI18N
        jCheckBox5.setForeground(new Color(255, 255, 255));
        jCheckBox5.setSelected(true);
        jCheckBox5.setText("Classification with decision trees");
        jCheckBox5.setFocusable(false);


        jCheckBox7.setFont(new java.awt.Font("Microsoft JhengHei UI", 1, 24)); // NOI18N
        jCheckBox7.setForeground(new Color(255, 255, 255));
        jCheckBox7.setSelected(true);
        jCheckBox7.setText("ML with k-means clustering");
        jCheckBox7.setFocusable(false);

        jCheckBox6.setFont(new java.awt.Font("Microsoft JhengHei UI", 1, 24)); // NOI18N
        jCheckBox6.setForeground(new Color(255, 255, 255));
        jCheckBox6.setSelected(true);
        jCheckBox6.setText("Classification with KNN algorithm");
        jCheckBox6.setFocusable(false);


        jButton7.setBackground(new Color(51, 102, 255));
        jButton7.setFont(new java.awt.Font("Microsoft JhengHei UI", 1, 24)); // NOI18N
        jButton7.setForeground(new Color(255, 255, 255));
        jButton7.setText("submit");


        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(320, 320, 320)
                                .addComponent(butttton6, javax.swing.GroupLayout.DEFAULT_SIZE, 475, Short.MAX_VALUE)
                                .addGap(312, 312, 312))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(jCheckBox3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBox6, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addGap(47, 47, 47)
                                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(jCheckBox1, javax.swing.GroupLayout.DEFAULT_SIZE, 571, Short.MAX_VALUE)
                                                        .addComponent(jCheckBox5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jCheckBox4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jCheckBox7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addGap(432, 432, 432)
                                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(butttton6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(54, 54, 54)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jCheckBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jCheckBox6, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(17, 17, 17)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jCheckBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jCheckBox5, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jCheckBox7, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(56, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlCenter.add(jPanel2, "card2");

        root_center.add(pnlCenter, java.awt.BorderLayout.CENTER);

        root.add(root_center, java.awt.BorderLayout.CENTER);

        getContentPane().add(root, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents



    private void jCheckBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox5ActionPerformed

    private void jCheckBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox6ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomeML.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomeML.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomeML.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomeML.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HomeML(args).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JButton jButton1;
    private JButton jButton2;
    private JButton jButton3;
    private JButton jButton4;
    private JButton jButton5;
    private JButton butttton6;
    private JButton jButton7;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel pnlBottom;
    private javax.swing.JPanel pnlCenter;
    private javax.swing.JPanel pnlTop;
    private javax.swing.JPanel root;
    private javax.swing.JPanel root_center;
    private javax.swing.JPanel root_side;

    ImageIcon imgIcon;
    ImageIcon imgIcon1;

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource()==butttton6){
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setCurrentDirectory(new File("src/main/java/ML_part/data"));
            int response = fileChooser.showOpenDialog(null);
            if (response == JFileChooser.APPROVE_OPTION){
                File file = new File(fileChooser.getSelectedFile().getAbsolutePath());
                System.out.println(file); //this prints absolute path of the file selected
            }
        }
        if (e.getSource()==jButton4){
            System.exit(0);
        }
        if (e.getSource()==jButton2){
            try {
                Desktop.getDesktop().open(new File("src/main/java/ML_part/data/data.xlsx"));
            } catch (IOException ex) {
                throw new RuntimeException(ex);
            }
        }
        if (e.getSource()==jButton7){
            boolean ranfor = jCheckBox3.isSelected();
            boolean knn = jCheckBox6.isSelected();
            boolean naiveBayes = jCheckBox1.isSelected();
            boolean decTree = jCheckBox5.isSelected();
            boolean smo = jCheckBox4.isSelected();
            boolean k_mean = jCheckBox7.isSelected();









            if (ranfor){
                Evaluation evaluation3 = null;
                try {
                    evaluation3 = (Evaluation) SerializationHelper.read("src/main/java/ML_part/ClassifierAndEvaluation/randomForestEvaluation.model");
                    TextAreaOutputStreamTest.main("-----------------------randomForest-----------------------\n"+evaluation3.toSummaryString());

                } catch (Exception ex) {
                    throw new RuntimeException(ex);
                }

            }
            if (knn){
                Evaluation evaluation1 = null;
                try {
                    evaluation1 = (Evaluation) SerializationHelper.read("src/main/java/ML_part/ClassifierAndEvaluation/kNNEvaluation.model");
                } catch (Exception ex) {
                    throw new RuntimeException(ex);
                }
                TextAreaOutputStreamTest.main("-----------------------kNN-----------------------\n"+evaluation1.toSummaryString());
            }
            if (naiveBayes){
                Evaluation evaluation2 = null;
                try {
                    evaluation2 = (Evaluation) SerializationHelper.read("src/main/java/ML_part/ClassifierAndEvaluation/naiveBayesEvaluation.model");
                } catch (Exception ex) {
                    throw new RuntimeException(ex);
                }
                TextAreaOutputStreamTest.main("-----------------------naiveBayes-----------------------\n"+evaluation2.toSummaryString());
            }
            if (decTree){
                Evaluation evaluation5 = null;
                try {
                    evaluation5 = (Evaluation) SerializationHelper.read("src/main/java/ML_part/ClassifierAndEvaluation/treeEvaluation.model");
                } catch (Exception ex) {
                    throw new RuntimeException(ex);
                }
                TextAreaOutputStreamTest.main("-----------------------treeEvaluation-----------------------\n"+evaluation5.toSummaryString());
            }
            if (smo){
                Evaluation evaluation4 = null;
                try {
                    evaluation4 = (Evaluation) SerializationHelper.read("src/main/java/ML_part/ClassifierAndEvaluation/smoEvaluation.model");
                } catch (Exception ex) {
                    throw new RuntimeException(ex);
                }
                TextAreaOutputStreamTest.main("-----------------------SMO-----------------------\n"+evaluation4.toSummaryString());
            }

            if (k_mean){
                try {
                    ClusteringTask.main();
                } catch (Exception ex) {
                    throw new RuntimeException(ex);
                }
            }



        }

    }
    // End of variables declaration//GEN-END:variables
}
